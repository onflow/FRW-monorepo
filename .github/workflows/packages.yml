name: Package Build Validation

on:
  push:
    paths:
      - "packages/**"
    branches: [main, dev]
  pull_request:
    paths:
      - "packages/**"
    branches: [main, dev]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changes.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed packages
        id: changes
        run: |
          # Get list of changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          else
            CHANGED_FILES=$(git diff --name-only HEAD~1)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Extract unique package names from changed files
          PACKAGES=$(echo "$CHANGED_FILES" | grep '^packages/' | cut -d'/' -f2 | sort -u | tr '\n' ' ')
          echo "Changed packages: $PACKAGES"
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  build-packages:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.packages != ''
    strategy:
      matrix:
        package: ${{ fromJson(format('[{0}]', '"' + join(split(needs.detect-changes.outputs.packages, ' '), '", "') + '"')) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm -F "@onflow/frw-${{ matrix.package }}" build

      - name: Run tests
        run: pnpm -F "@onflow/frw-${{ matrix.package }}" test
        continue-on-error: true

  lint-packages:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.packages != ''

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint changed packages
        run: |
          for package in ${{ needs.detect-changes.outputs.packages }}; do
            echo "Linting package: $package"
            pnpm -F "@onflow/frw-$package" lint
          done

  typecheck-packages:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.packages != ''

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript check changed packages
        run: |
          for package in ${{ needs.detect-changes.outputs.packages }}; do
            echo "Type checking package: $package"
            pnpm -F "@onflow/frw-$package" typecheck || true
          done
