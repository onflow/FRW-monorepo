name: iOS CI

on:
  push:
    branches: [dev]
    tags:
      - "release/rn-*"
  workflow_dispatch: {}

jobs:
  ios-beta:
    if: startsWith(github.ref, 'refs/heads/dev') || github.event_name == 'workflow_dispatch'
    runs-on: macos-14
    timeout-minutes: 90
    env:
      IOS_WORKSPACE: FRW.xcworkspace
      IOS_SCHEME: FlowWallet-dev
      IOS_CONFIGURATION: Debug
      # Fastlane Appfile expects these (set in repo/org secrets)
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      DEVELOPER_TEAM_ID: ${{ secrets.DEVELOPER_TEAM_ID }}
      ASC_TEAM_ID: ${{ secrets.ASC_TEAM_ID }}
      # TestFlight contact info (optional)
      BETA_CONTACT_EMAIL: ${{ secrets.BETA_CONTACT_EMAIL }}
      BETA_CONTACT_FIRST_NAME: ${{ secrets.BETA_CONTACT_FIRST_NAME }}
      BETA_CONTACT_LAST_NAME: ${{ secrets.BETA_CONTACT_LAST_NAME }}
      BETA_CONTACT_PHONE: ${{ secrets.BETA_CONTACT_PHONE }}
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          # If submodules are private in other repos, set SUBMODULES_TOKEN in secrets and uncomment:
          # token: ${{ secrets.SUBMODULES_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack and setup pnpm
        run: |
          corepack enable
          if [ -n "${PNPM_VERSION:-}" ]; then
            corepack prepare "pnpm@${PNPM_VERSION}" --activate
          fi

      - name: Install JS dependencies (pnpm install)
        run: pnpm install --frozen-lockfile

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.4"
          bundler-cache: true
          working-directory: apps/react-native

      - name: Install CocoaPods
        run: |
          cd apps/react-native/ios
          bundle install
          bundle exec pod install --repo-update

      - name: Import iOS signing certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_CERT_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Install provisioning profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > "$HOME/Library/MobileDevice/Provisioning Profiles/profile.mobileprovision"

      - name: Prepare App Store Connect API key (optional)
        if: env.APP_STORE_CONNECT_API_KEY_JSON != ''
        env:
          APP_STORE_CONNECT_API_KEY_JSON: ${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}
        run: |
          echo "$APP_STORE_CONNECT_API_KEY_JSON" > "$RUNNER_TEMP/asc-api-key.json"
          echo "APP_STORE_CONNECT_API_KEY=$RUNNER_TEMP/asc-api-key.json" >> $GITHUB_ENV

      - name: Bundle React Native (iOS)
        run: |
          cd apps/react-native
          pnpm run bundle:ios

      - name: Build & Upload to TestFlight (fastlane beta)
        env:
          # Alternative App Store Connect API key variables (if not using JSON file above):
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
        run: |
          cd apps/react-native/ios
          bundle exec fastlane ios beta

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts-beta
          path: apps/react-native/ios/build

  ios-release:
    if: startsWith(github.ref, 'refs/tags/release/rn-')
    runs-on: macos-14
    timeout-minutes: 90
    env:
      IOS_WORKSPACE: FRW.xcworkspace
      IOS_SCHEME: FlowWallet
      IOS_CONFIGURATION: Release
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      DEVELOPER_TEAM_ID: ${{ secrets.DEVELOPER_TEAM_ID }}
      ASC_TEAM_ID: ${{ secrets.ASC_TEAM_ID }}
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack and setup pnpm
        run: |
          corepack enable
          if [ -n "${PNPM_VERSION:-}" ]; then
            corepack prepare "pnpm@${PNPM_VERSION}" --activate
          fi

      - name: Install JS dependencies (pnpm install)
        run: pnpm install --frozen-lockfile

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.4"
          bundler-cache: true
          working-directory: apps/react-native

      - name: Install CocoaPods
        run: |
          cd apps/react-native/ios
          bundle install
          bundle exec pod install --repo-update

      - name: Import iOS signing certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_CERT_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Install provisioning profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > "$HOME/Library/MobileDevice/Provisioning Profiles/profile.mobileprovision"

      - name: Prepare App Store Connect API key (optional)
        if: env.APP_STORE_CONNECT_API_KEY_JSON != ''
        env:
          APP_STORE_CONNECT_API_KEY_JSON: ${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}
        run: |
          echo "$APP_STORE_CONNECT_API_KEY_JSON" > "$RUNNER_TEMP/asc-api-key.json"
          echo "APP_STORE_CONNECT_API_KEY=$RUNNER_TEMP/asc-api-key.json" >> $GITHUB_ENV

      - name: Bundle React Native (iOS)
        run: |
          cd apps/react-native
          pnpm run bundle:ios

      - name: Build & Upload to App Store (fastlane release)
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
        run: |
          cd apps/react-native/ios
          bundle exec fastlane ios release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts-release
          path: apps/react-native/ios/build
