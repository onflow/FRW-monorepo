name: AI-Powered Release Notes Generation

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      from_tag:
        description: "Start tag (older) for range, e.g. release/ext-3.0.0"
        required: true
        type: string
      to_tag:
        description: "End tag (newer) for range, e.g. release/ext-3.1.0"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: read
  issues: read
  id-token: write

concurrency:
  group: release-notes-${{ github.event_name }}-${{ github.event.release.tag_name || inputs.to_tag || github.ref_name }}
  cancel-in-progress: true

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Collect Commit Information
        id: collect-commits
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_TAG_NAME: ""
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          REPOSITORY: ${{ github.repository }}
          INPUT_FROM_TAG: ${{ inputs.from_tag }}
          INPUT_TO_TAG: ${{ inputs.to_tag }}
        run: |
          bash scripts/release-notes/collect_commits.sh

      - name: Generate Release Notes with Claude AI
        id: generate-notes
        env:
          PREVIOUS_TAG: ${{ steps.collect-commits.outputs.PREVIOUS_TAG }}
          TAG_NAME: ${{ steps.collect-commits.outputs.TAG_NAME }}
          COMMIT_COUNT: ${{ steps.collect-commits.outputs.COMMIT_COUNT }}
          REPOSITORY: ${{ github.repository }}
          INPUT_FROM_TAG: ${{ inputs.from_tag }}
          INPUT_TO_TAG: ${{ inputs.to_tag }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          bash scripts/release-notes/generate_with_ai.sh
          # Sanitize
          bash scripts/release-notes/sanitize_notes.sh ai_release_notes.md

          echo "âœ… AI-generated release notes (sanitized):"
          echo "-----"
          cat ai_release_notes.md || true
          echo "-----"

          # Clean up temporary files for security
          rm -f claude_prompt.md claude_request_template.json claude_request_final.json commit_info.md

      - name: Update Release with AI-Generated Notes
        env:
          EVENT_NAME: ${{ github.event_name }}
          TAG_NAME: ${{ steps.collect-commits.outputs.TAG_NAME }}
          REPOSITORY: ${{ github.repository }}
          INPUT_FROM_TAG: ${{ inputs.from_tag }}
          INPUT_TO_TAG: ${{ inputs.to_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: ${{ github.event.release.id }}
        run: |
          bash scripts/release-notes/update_release_body.sh

      - name: Add Success Comment
        if: github.event.release.discussion_url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "ðŸ¤– AI-powered release notes have been automatically generated and updated using Claude!"
