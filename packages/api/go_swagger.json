{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "",
        "title": "",
        "contact": {},
        "version": ""
    },
    "host": "",
    "basePath": "/",
    "paths": {
        "/crypto/exchange": {
            "get": {
                "description": "get flhistoryw pricing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Get the history pricing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the paired token name",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the after value",
                        "name": "after",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the period mapped",
                        "name": "period",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the history crypto mapping."
                    }
                }
            }
        },
        "/crypto/history": {
            "get": {
                "description": "get flhistoryw pricing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Get the history pricing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the paired token name",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the after value",
                        "name": "after",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the period mapped",
                        "name": "period",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the history crypto mapping."
                    }
                }
            }
        },
        "/crypto/summary": {
            "get": {
                "description": "get flow pricing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Get the flow pricing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the paired token name",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the flow crypto mapping."
                    }
                }
            }
        },
        "/nft/meta": {
            "get": {
                "description": "Get the nft meta",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft meta info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the contract",
                        "name": "contractName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/account/info": {
            "get": {
                "description": "get address by user address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the account being viewed",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/account/query": {
            "post": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string format graphql query to view flowscan result",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with address transfer list."
                    }
                }
            }
        },
        "/v1/account/signpayer": {
            "post": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "object",
                        "description": "transaction before signed envelope",
                        "name": "transaction",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with signed envelope."
                    }
                }
            }
        },
        "/v1/account/tokentransfer": {
            "get": {
                "description": "get token transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address token transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the queried account",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of the queried token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the endcursor of last page, leave blank if first page",
                        "name": "after",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 of the token transfer list from the address.",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionReturn"
                        }
                    }
                }
            }
        },
        "/v1/account/transaction": {
            "get": {
                "description": "get transaction list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transaction info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the account being viewed",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit of the returned list",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "starting index of the first data",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/account/transfer": {
            "get": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the account being viewed",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit of the returned list",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with address transfer list."
                    }
                }
            }
        },
        "/v1/account/transfers": {
            "get": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the queried account",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the endcursor of last page, leave blank if first page",
                        "name": "after",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with address transfer list.",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionReturn"
                        }
                    }
                }
            }
        },
        "/v1/address/filter": {
            "post": {
                "description": "filter address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Filter lilico address",
                "parameters": [
                    {
                        "description": "array of addresses",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return contained addresses",
                        "schema": {
                            "$ref": "#/definitions/controllers.AddressFilterResponse"
                        }
                    }
                }
            }
        },
        "/v1/addressbook/contact": {
            "get": {
                "description": "return contact list array",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addressbook"
                ],
                "summary": "Get all contact",
                "responses": {
                    "200": {
                        "description": "return contact info",
                        "schema": {
                            "$ref": "#/definitions/controllers.contactReturn"
                        }
                    }
                }
            },
            "put": {
                "description": "add by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addressbook"
                ],
                "summary": "Add a contact",
                "parameters": [
                    {
                        "description": "contact name of the new contact",
                        "name": "contact_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "username of the new contact",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "address of the new contact",
                        "name": "address",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "domain of the new contact",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "type of domain",
                        "name": "domain_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while addressbook created."
                    }
                }
            },
            "post": {
                "description": "change the contact detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addressbook"
                ],
                "summary": "Edit contact",
                "parameters": [
                    {
                        "description": "contact id of the contact wish to edit",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "new contact name, keep it same if unchanged",
                        "name": "contact_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "new address, keep it same if unchanged",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "new domain, keep it same if unchanged",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "new domain_type, keep it same if unchanged",
                        "name": "domain_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while addressbook created."
                    }
                }
            },
            "delete": {
                "description": "remove by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addressbook"
                ],
                "summary": "Remove a contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the contact id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while contact removed."
                    }
                }
            }
        },
        "/v1/addressbook/external": {
            "put": {
                "description": "add with address and contact name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addressbook"
                ],
                "summary": "Add an external contact",
                "parameters": [
                    {
                        "description": "contact name of the new contact",
                        "name": "contact_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "address of the new contact",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "contact name of the new contact",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "type of domain",
                        "name": "domain_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while addressbook created."
                    }
                }
            }
        },
        "/v1/coin/map": {
            "get": {
                "description": "get coin list by with IDs based on the cmc ranking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coin"
                ],
                "summary": "Get the coin mapping info",
                "responses": {
                    "200": {
                        "description": "return the coin mapping."
                    }
                }
            }
        },
        "/v1/coin/rate": {
            "get": {
                "description": "get coin detail using coin ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coin"
                ],
                "summary": "Get the coin exchange info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "coin id based on the rate",
                        "name": "coinId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the coin mapping."
                    }
                }
            }
        },
        "/v1/crypto/map": {
            "get": {
                "description": "get crypto list mapping from cryptowatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Get the crypto mapping info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the paired token name",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the crypto mapping."
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User's public Key",
                        "name": "public_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "the signature of the message",
                        "name": "signature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v1/mobile/register": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register user for mobile",
                "parameters": [
                    {
                        "description": "User Name",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v1/mobile/user/address": {
            "post": {
                "description": "add by uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add an address",
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/nft/list": {
            "get": {
                "description": "get nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "uoffset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/profile": {
            "post": {
                "description": "update profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update profile info",
                "parameters": [
                    {
                        "description": "string of new nickname",
                        "name": "nickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "avatar url",
                        "name": "avatar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/profile/preference": {
            "post": {
                "description": "update profile preference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update profile preference",
                "parameters": [
                    {
                        "description": "toggle of private preference 1 is public 2 is private",
                        "name": "private",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/register": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Name",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v1/user/address": {
            "post": {
                "description": "add by uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add an address",
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/user/address/network": {
            "post": {
                "description": "add by uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add an address",
                "parameters": [
                    {
                        "description": "account key object",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "the network of the address you want to create",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/user/check": {
            "get": {
                "description": "check by user name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check if user name unique",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the boolen indicating uniqueness of username",
                        "schema": {
                            "$ref": "#/definitions/controllers.CheckReturn"
                        }
                    }
                }
            }
        },
        "/v1/user/device": {
            "get": {
                "description": "return the device content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Check device info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "installation id of the current device",
                        "name": "device_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the device info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Device"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Create the device content with ip device id and wallet id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Create device info",
                "parameters": [
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    },
                    {
                        "description": "devices accounts mainnet wallet id",
                        "name": "wallet_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "devices accounts testnet wallet id",
                        "name": "wallettest_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while devices created."
                    }
                }
            },
            "post": {
                "description": "Update with device id and last update time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Update an device",
                "parameters": [
                    {
                        "description": "installation id of the new device",
                        "name": "device_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while device updated."
                    }
                }
            }
        },
        "/v1/user/info": {
            "get": {
                "description": "return the profile content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check profile info",
                "responses": {
                    "200": {
                        "description": "return the profile info",
                        "schema": {
                            "$ref": "#/definitions/controllers.ProfileReturn"
                        }
                    }
                }
            }
        },
        "/v1/user/keys": {
            "get": {
                "description": "return the device list with publickey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Get device info",
                "responses": {
                    "200": {
                        "description": "return the public key list",
                        "schema": {
                            "$ref": "#/definitions/controllers.PubKeyReturn"
                        }
                    }
                }
            }
        },
        "/v1/user/location": {
            "get": {
                "description": "return the ip location info from ip-api.com",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Get ip location info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip of the current device",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the public key list",
                        "schema": {
                            "$ref": "#/definitions/types.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/recaptcha": {
            "get": {
                "description": "Return validation result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verify the recaptcha token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the recaptcha token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/user/search": {
            "get": {
                "description": "check by username or address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Search using address or username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the search result",
                        "schema": {
                            "$ref": "#/definitions/controllers.SearchResult"
                        }
                    }
                }
            }
        },
        "/v1/user/searchaddress": {
            "get": {
                "description": "Return the user containing the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Search using address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the search result",
                        "schema": {
                            "$ref": "#/definitions/controllers.SearchResult"
                        }
                    }
                }
            }
        },
        "/v1/user/token": {
            "post": {
                "description": "add push token to specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add push token",
                "parameters": [
                    {
                        "description": "string of push token",
                        "name": "push_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/wallet": {
            "get": {
                "description": "Get the user's wallet by userid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get the user wallet",
                "responses": {
                    "200": {
                        "description": "return user info together with address and public key",
                        "schema": {
                            "$ref": "#/definitions/controllers.WalletReturn"
                        }
                    }
                }
            }
        },
        "/v2/account/query": {
            "get": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the queried account",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the endcursor of last page, leave blank if first page",
                        "name": "after",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with address transfer list.",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionReturnV2"
                        }
                    }
                }
            }
        },
        "/v2/account/tokentransfer": {
            "get": {
                "description": "get token transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address token transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the queried account",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of the queried token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the endcursor of last page, leave blank if first page",
                        "name": "after",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 of the token transfer list from the address.",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionReturn"
                        }
                    }
                }
            }
        },
        "/v2/account/transfers": {
            "get": {
                "description": "get transfer list by address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get the address transfer info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address of the queried account",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the endcursor of last page, leave blank if first page",
                        "name": "after",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with address transfer list.",
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionReturnV2"
                        }
                    }
                }
            }
        },
        "/v2/login": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user V2",
                "parameters": [
                    {
                        "description": "User's public Key",
                        "name": "public_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "the signature of the message",
                        "name": "signature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v2/nft/collections": {
            "get": {
                "description": "Get the collections containing nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return available collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.NFTReturns"
                            }
                        }
                    }
                }
            }
        },
        "/v2/nft/detail": {
            "get": {
                "description": "Get the nft meta detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the contract",
                        "name": "contractName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "single nft id",
                        "name": "nftID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with the detail of nft"
                    }
                }
            }
        },
        "/v2/nft/detail/list": {
            "get": {
                "description": "Get the nft list grouped by collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "number of nft to be displayed in one page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "starting index of the page",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with users entire nft collection."
                    }
                }
            }
        },
        "/v2/nft/favorite": {
            "get": {
                "description": "Get the top selection nft within each collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the favorite nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return favorite collections",
                        "schema": {
                            "$ref": "#/definitions/controllers.FavoriteReturn"
                        }
                    }
                }
            },
            "put": {
                "description": "Add new favorite nft using contract name and nft id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Add new favorite nft",
                "parameters": [
                    {
                        "description": "contract id of the nft",
                        "name": "contract",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "id of the nft",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "address of the nft owner",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with the info of the current favorite list."
                    }
                }
            },
            "post": {
                "description": "Upate the favorite list in new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Update the favorite list",
                "parameters": [
                    {
                        "description": "format contract-id of the nfts in order, use comma to seperate",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with the info of the current favorite list."
                    }
                }
            }
        },
        "/v2/nft/list": {
            "get": {
                "description": "get nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "uoffset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v2/nft/meta": {
            "get": {
                "description": "Get the nft meta",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the nft meta info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the contract",
                        "name": "contractName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v2/nft/single": {
            "get": {
                "description": "Get the single collection containing nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the single collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the contract",
                        "name": "contractName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "number of nft to be displayed in one page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "starting index of the page",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return available collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.NFTCollection"
                            }
                        }
                    }
                }
            }
        },
        "/v2/user/address": {
            "post": {
                "description": "add by uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add an address",
                "responses": {
                    "200": {
                        "description": "JSON response with transaction ID in the data.txid field",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v2/user/manualaddress": {
            "post": {
                "description": "Creates a new address for the authenticated user with the provided account key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new flow address manually",
                "parameters": [
                    {
                        "description": "Account key information including hash algorithm, sign algorithm, and public key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKeyForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON response with transaction ID in the data.txid field",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v2/user/wallet": {
            "get": {
                "description": "Get the user's wallet by userid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get the user wallet",
                "responses": {
                    "200": {
                        "description": "return user info together with address and public key",
                        "schema": {
                            "$ref": "#/definitions/controllers.WalletReturn"
                        }
                    }
                }
            }
        },
        "/v3/checkimport": {
            "get": {
                "description": "verify key by backup and save new key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Save key V3",
                "parameters": [
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "AccountKeySignature object",
                        "name": "signatures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/forms.AccountKeySignature"
                            }
                        }
                    },
                    {
                        "description": "BackupInfo object",
                        "name": "backup_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.BackupInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200"
                    }
                }
            }
        },
        "/v3/import": {
            "post": {
                "description": "verify key by backup and save new key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Save key V3",
                "parameters": [
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "AccountKeySignature object",
                        "name": "signatures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/forms.AccountKeySignature"
                            }
                        }
                    },
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200"
                    }
                }
            }
        },
        "/v3/login": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Login user V3",
                "parameters": [
                    {
                        "description": "the signature of the message",
                        "name": "signature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v3/nft/favorite": {
            "get": {
                "description": "Get the top selection nft within each collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft"
                ],
                "summary": "Get the favorite nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user  nft address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return favorite collections",
                        "schema": {
                            "$ref": "#/definitions/controllers.FavoriteReturn"
                        }
                    }
                }
            }
        },
        "/v3/register": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Name",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserReturn"
                        }
                    }
                }
            }
        },
        "/v3/signed": {
            "post": {
                "description": "verify key by backup and save new key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Save key V3",
                "parameters": [
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "AccountKeySignature object",
                        "name": "signatures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/forms.AccountKeySignature"
                            }
                        }
                    },
                    {
                        "description": "BackupInfo object",
                        "name": "backup_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.BackupInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200"
                    }
                }
            }
        },
        "/v3/sync": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userv3"
                ],
                "summary": "Sync new user device V3",
                "parameters": [
                    {
                        "description": "Account key",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountKey"
                        }
                    },
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    },
                    {
                        "description": "BackupInfo object",
                        "name": "backup_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.BackupInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200"
                    }
                }
            }
        },
        "/v3/user/device": {
            "put": {
                "description": "Create the device content with ip device id and wallet id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Create device info",
                "parameters": [
                    {
                        "description": "DeviceInfo object",
                        "name": "device_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DeviceInfo"
                        }
                    },
                    {
                        "description": "devices accounts mainnet wallet id",
                        "name": "wallet_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "devices accounts testnet wallet id",
                        "name": "wallettest_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while devices created."
                    }
                }
            },
            "post": {
                "description": "Update with device id and last update time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Update an device",
                "parameters": [
                    {
                        "description": "installation id of the new device",
                        "name": "device_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while device updated."
                    }
                }
            }
        },
        "/v3/user/location": {
            "get": {
                "description": "return the ip location info from ip-api.com",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Get ip location info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip of the current device",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the public key list",
                        "schema": {
                            "$ref": "#/definitions/types.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AddressFilterResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.CheckReturn": {
            "type": "object",
            "properties": {
                "unique": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.CollectionAddress": {
            "type": "object",
            "properties": {
                "mainnet": {
                    "type": "string"
                },
                "testnet": {
                    "type": "string"
                }
            }
        },
        "controllers.DomainStruct": {
            "type": "object",
            "properties": {
                "domain_type": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controllers.FavoriteReturn": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "list": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "nftcount": {
                    "type": "integer"
                },
                "nfts": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "controllers.NFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/controllers.CollectionAddress"
                },
                "banner": {
                    "type": "string"
                },
                "contract_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "marketplace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "official_website": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/definitions/controllers.Path"
                },
                "secure_cadence_compatible": {
                    "$ref": "#/definitions/controllers.SCC"
                }
            }
        },
        "controllers.NFTReturns": {
            "type": "object",
            "properties": {
                "collection": {
                    "$ref": "#/definitions/controllers.NFTCollection"
                },
                "count": {
                    "type": "integer"
                },
                "ids": {}
            }
        },
        "controllers.Path": {
            "type": "object",
            "properties": {
                "public_collection_name": {
                    "type": "string"
                },
                "public_path": {
                    "type": "string"
                },
                "storage_path": {
                    "type": "string"
                }
            }
        },
        "controllers.ProfileReturn": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "private": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.PubKeyReturn": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.pubKeyReturn"
                    }
                }
            }
        },
        "controllers.SCC": {
            "type": "object",
            "properties": {
                "mainnet": {
                    "type": "boolean"
                },
                "testnet": {
                    "type": "boolean"
                }
            }
        },
        "controllers.SearchResult": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.User"
                    }
                }
            }
        },
        "controllers.TransactionReturn": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "boolean"
                },
                "string": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.TransactionReturnContent"
                    }
                }
            }
        },
        "controllers.TransactionReturnContent": {
            "type": "object",
            "properties": {
                "additional_message": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "receiver": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "integer"
                },
                "txid": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "controllers.TransactionReturnContentV2": {
            "type": "object",
            "properties": {
                "additional_message": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "receiver": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "integer"
                },
                "txid": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "controllers.TransactionReturnV2": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "boolean"
                },
                "string": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.TransactionReturnContentV2"
                    }
                }
            }
        },
        "controllers.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.UserReturn": {
            "type": "object",
            "properties": {
                "custom_token": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "controllers.WalletReturn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "primary_wallet": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "wallets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.wallet"
                    }
                }
            }
        },
        "controllers.backupInfo": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "controllers.blockchain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "coins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.contactReturn": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "contact_type": {
                    "type": "integer"
                },
                "domain": {
                    "$ref": "#/definitions/controllers.DomainStruct"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.pubKeyReturn": {
            "type": "object",
            "properties": {
                "backup_info": {
                    "$ref": "#/definitions/controllers.backupInfo"
                },
                "device": {
                    "$ref": "#/definitions/models.Device"
                },
                "pubkey": {
                    "$ref": "#/definitions/controllers.pubkeyInfo"
                }
            }
        },
        "controllers.pubkeyInfo": {
            "type": "object",
            "properties": {
                "hash_algo": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "sign_algo": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "controllers.wallet": {
            "type": "object",
            "properties": {
                "blockchain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.blockchain"
                    }
                },
                "chain_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "forms.AccountKey": {
            "type": "object",
            "properties": {
                "hash_algo": {
                    "type": "integer"
                },
                "public_key": {
                    "type": "string"
                },
                "sign_algo": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "forms.AccountKeyForm": {
            "type": "object",
            "required": [
                "hashAlgorithm",
                "publicKey",
                "signatureAlgorithm",
                "weight"
            ],
            "properties": {
                "hashAlgorithm": {
                    "type": "integer"
                },
                "publicKey": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "forms.AccountKeySignature": {
            "type": "object",
            "properties": {
                "hash_algo": {
                    "type": "integer"
                },
                "public_key": {
                    "type": "string"
                },
                "sign_algo": {
                    "type": "integer"
                },
                "sign_message": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "forms.BackupInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "forms.DeviceInfo": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "continentCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "isp": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "org": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "models.Device": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "continentCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_type": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "isp": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "org": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "revoked_status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "integer"
                },
                "walletsand_id": {
                    "type": "integer"
                },
                "wallettest_id": {
                    "type": "integer"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "types.ApiResponse": {
            "type": "object",
            "properties": {
                "as": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "continentCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "isp": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "org": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        }
    }
}
